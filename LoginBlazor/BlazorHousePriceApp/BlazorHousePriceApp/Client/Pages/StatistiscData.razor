@page "/statisticsdata"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using BlazorHousePriceApp.Shared

@attribute [Authorize]

@inject HttpClient Http


<h3>Statistics Data</h3>

@if (houses == null)
{
    <Wave Size="70px" />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>City</th>
                <th>Price</th>
                <th>Grade</th>
                <th>SqftLot</th>
                <th>MaxPrice</th>
                <th>MinPrice</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var house in houses)
            {
                <tr>
                    <th>@house.City</th>
                    <th>@house.Price</th>
                    <th>@house.Grade</th>
                    <th>@house.SqftLot</th>
                    <th>@house.MaxPrice</th>
                    <th>@house.MinPrice</th>
                    <th>@house.DateOfStatistic</th>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col-md-12 col-sm-12 p-4">
            
            <RadzenChart>
                <RadzenLineSeries Smooth="false" Data="@houses" CategoryProperty="DateOfStatistic" Title="Chart1" LineType="LineType.Dashed" ValueProperty="MediaPret">
                    <RadzenMarkers MarkerType="MarkerType.Square" />
                </RadzenLineSeries>
                
                <RadzenCategoryAxis Padding="30" FormatString="{0:DDD}" />
                
            </RadzenChart>
        </div>
    </div>
}


@code {


    private Statistics[] houses;
    private Statistics[] texas_houses;

    private string apiUrl = "http://localhost:5000/api/v1/statistics";

    protected override async Task OnInitializedAsync()
    {
        houses = await Http.GetFromJsonAsync<Statistics[]>(apiUrl);
        /*
        foreach (var house in houses)
        {
            if (String.Equals(house.NumeOras, "Singapore") == true)
            {
                texas_houses.Append<Statistics>(house);
            }
        }
        */
    }

    public class Statistics
    {
        public string City { get; set; }
        public double? Price { get; set; }
        public double? SqftLot { get; set; }
        public double? Grade { get; set; }
        public double? MaxPrice { get; set; }
        public double? MinPrice { get; set; }
        public DateTime DateOfStatistic { get; set; }

    }

}
